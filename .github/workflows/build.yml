name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Gradle prebuild
        run: |
          ./gradlew prebuild

      - name: Build Release APK
        id: buildRelease
        run: |
          ./gradlew clean assembleRelease
          find ./app -type f -name "*.apk" -exec bash -c 'mv "$0" ./app/$(basename "$0")' {} \;

      - name: Upload Release APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: "app/*.apk"

      - name: Build Debug APK
        id: buildDebug
        run: |
          find ./app -type f -name "*.apk" -exec rm -f {} \;
          ./gradlew clean assembleDebug
          find ./app -type f -name "*.apk" -exec bash -c 'mv "$0" ./app/$(basename "$0")' {} \;
          
      - name: Upload Debug APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: debug
          path: "app/*.apk"          
